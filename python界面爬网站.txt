import tkinter as tk
import requests
from bs4 import BeautifulSoup
import threading
import time


class CrawlerGUI:
    def __init__(self, master):
        self.master = master
        master.title("Web Crawler")

        self.url_label = tk.Label(master, text="Website URL:")
        self.url_label.grid(row=0, column=0)
        self.url_entry = tk.Entry(master, width=50)
        self.url_entry.grid(row=0, column=1)

        self.selector_label = tk.Label(master, text="Page Selector:")
        self.selector_label.grid(row=1, column=0)
        self.selector_entry = tk.Entry(master, width=50)
        self.selector_entry.grid(row=1, column=1)

        self.page_label = tk.Label(master, text="Page Range (e.g. 1-10):")
        self.page_label.grid(row=2, column=0)
        self.page_entry = tk.Entry(master, width=50)
        self.page_entry.grid(row=2, column=1)

        self.time_label = tk.Label(master, text="Time Interval (in seconds):")
        self.time_label.grid(row=3, column=0)
        self.time_entry = tk.Entry(master, width=50)
        self.time_entry.grid(row=3, column=1)

        self.start_button = tk.Button(master, text="Start", command=self.start_crawling)
        self.start_button.grid(row=4, column=1)

    def start_crawling(self):
        url = self.url_entry.get()
        selector = self.selector_entry.get()
        page_range = self.page_entry.get()
        time_interval = self.time_entry.get()

        if not url or not selector or not page_range or not time_interval:
            error_label = tk.Label(self.master, text="Please fill in all fields!")
            error_label.grid(row=5, column=1)
            return

        start_page, end_page = page_range.split("-")
        start_page = int(start_page)
        end_page = int(end_page)

        while True:
            for i in range(start_page, end_page+1):
                page_url = url + f"?page={i}"
                response = requests.get(page_url)
                soup = BeautifulSoup(response.content, "html.parser")
                results = soup.select(selector)

                for result in results:
                    print(result.text)

            time.sleep(int(time_interval))


root = tk.Tk()
crawler_gui = CrawlerGUI(root)
root.mainloop()